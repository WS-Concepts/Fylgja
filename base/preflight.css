/**
 * Fylgja (https://fylgja.dev)
 * Licensed under MIT Open Source
 */
*,
::before,
::after {
  box-sizing: border-box;
  border: 0 solid;
}

:root {
  --root-bg: hsl(0, 0%, 100%);
  --root-fg: hsl(0, 0%, 8%);
  --family-emoji: "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
  	"Noto Color Emoji";
  --family-sans: system-ui, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell,
  	Helvetica, Arial, "Helvetica Neue", sans-serif, var(--family-emoji);
  --family-mono: ui-monospace, SFMono-Regular, "SF Mono", Menlo, Consolas,
  	"Liberation Mono", monospace, var(--family-emoji);
  --chevron-light-scheme: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke="hsl(0 0% 0%)"><path d="m6 9 6 6 6-6"/></svg>');
  --chevron-dark-scheme: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke="hsl(0 0% 100%)"><path d="m6 9 6 6 6-6"/></svg>');
  --outline-transition: outline-offset 150ms cubic-bezier(0.25, 0, 0.4, 1);
  --surface-color: color-mix(in srgb, var(--root-bg) 92%, var(--root-fg));
}

:where(:focus-visible) {
  outline: 2px solid;
  outline-offset: 2px;
}

:where(:active:focus-visible) {
  outline-offset: 0;
  transition: var(--outline-transition);
}

:target {
  scroll-margin-block: var(--anchor-offset, max(2rem, 5svb));
}

@media (prefers-reduced-motion: no-preference) {
  :has(:target) {
    scroll-behavior: smooth;
  }
}
:where(html) {
  block-size: 100%;
  font-family: var(--family-sans);
  tab-size: 4;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
  scrollbar-gutter: stable;
}

:where(body) {
  min-block-size: 100%;
  margin: 0;
  background-color: var(--root-bg);
  color: var(--root-fg);
  font-size: var(--font-size, 1rem);
  line-height: var(--line-height, 1.6);
}

:where(article, section) {
  display: flow-root;
}

:where(:any-link,
button,
input,
label[for],
select,
summary,
textarea,
[tabindex]:not([tabindex^="-"])) {
  touch-action: manipulation;
}

:where(:any-link,
button,
label[for],
label:has(input:is([type=radio], [type=checkbox]):enabled),
summary,
[tabindex]:not([tabindex^="-"])) {
  cursor: pointer;
}

:where(summary) {
  display: list-item;
}

:where(summary > *) {
  display: inline;
}

:disabled {
  cursor: not-allowed;
}

:where(img, svg, video, canvas, audio, iframe, embed, object) {
  display: block;
}

:where(img, svg, video, iframe) {
  max-inline-size: 100%;
  block-size: auto;
}

:where(iframe) {
  aspect-ratio: var(--aspect-ratio, 16/9);
}

:where(h1, h2, h3, h4, h5, h6, p, dl, ul, ol, pre, hgroup) {
  margin-block: var(--text-flow, 1em 1rem);
}

:where(blockquote, figure, hr) {
  margin-block: var(--separator-flow, 2.5em);
  margin-inline: 0;
}

:where(h1, h2, h3, h4, h5, h6, legend) {
  font-size: var(--h-size, 1.1rem);
  font-weight: var(--h-weight, 700);
  line-height: var(--h-line, 1.1);
  text-wrap: balance;
}

:where(h1) {
  --h-size: 3.5rem;
}

:where(h2) {
  --h-size: 2.5rem;
}

:where(h3) {
  --h-size: 2rem;
}

:where(h4) {
  --h-size: 1.5rem;
}

:where(h5) {
  --h-size: 1.25rem;
}

:where(p, li, dd) {
  text-wrap: pretty;
}

:where(:any-link) {
  color: inherit;
  font-weight: 500;
}

:where(blockquote) {
  padding-inline-start: 1.5em;
  border-inline-start: 4px solid;
}

:where(address) {
  font-style: inherit;
}

:where(input, button, textarea, select),
:where(input[type=file])::-webkit-file-upload-button {
  font: inherit;
}

:where(:is(ul, ol)[role=list], nav :is(ul, ol)) {
  list-style: none;
  margin-block: 0;
  padding-inline-start: 0;
}

:where(hgroup > *),
:where(dl, ol, ul) :where(dl, ol, ul) {
  margin-block: 0;
}

:where(dt) {
  font-weight: 500;
}

:where(dd + dt) {
  margin-block-start: 0.5em;
}

:where(dd) {
  margin-inline-start: 0;
}

:where(hr) {
  border-block-end-width: 2px;
  color: inherit;
}

:where(small) {
  font-size: 0.875em;
}

:where(sub, sup) {
  position: relative;
  font-size: 0.75em;
  line-height: 0;
  vertical-align: baseline;
}

:where(sub) {
  bottom: -0.25em;
}

:where(sup) {
  top: -0.5em;
}

:where(code, pre, kbd, samp) {
  font-family: var(--family-mono);
}

:where(code, mark, :not(kbd) > kbd) {
  border-radius: 0.2em;
  padding: 0.125rem 0.25rem;
}

:where(code, pre) {
  writing-mode: lr;
  direction: ltr;
}

:where(pre, :not(pre) > code) {
  background: var(--surface-color);
}

:where(:not(kbd) > kbd) {
  border-width: 1px;
}

:where(pre) {
  border-radius: 0.5em;
  padding: 0.875em 1em;
  white-space: pre;
  overflow: auto;
}

:where(table) {
  border-spacing: 0;
  border-color: var(--table-stroke, #777);
}

:where(thead, tbody, tfoot, tr, th, td) {
  border-color: inherit;
  text-align: inherit;
}

:where(th, td) {
  padding-block: var(--table-py, 0.875em);
  padding-inline: var(--table-px, 0.625em);
  background: var(--root-bg);
  color: var(--root-fg);
}

:where(tr + tr :is(th, td)) {
  border-block-start-width: 1px;
}

:where(thead tr:last-child :is(th, td)) {
  border-block-end-width: 2px;
}

:where(tfoot tr:first-child :is(th, td)) {
  border-block-start-width: 2px;
}

@media print {
  :root {
    --root-bg: white;
    --root-fg: black;
  }
  :is(h1, h2, h3, h4, h5, h6) {
    page-break-after: avoid;
  }
  :is(h2, h3, h4, h5, h6, p) {
    orphans: 3;
    widows: 3;
  }
  :is(tr, img, svg, pre, blockquote) {
    page-break-inside: avoid;
  }
  :is(abbr[title])::after {
    content: " (" attr(title) ")";
  }
  :is(a[href]:not([href^="#"], [href^="javascript:"]))::after {
    content: " (" attr(href) ")";
  }
  :is(thead) {
    display: table-header-group;
  }
  :is(input, select, textarea, button, .btn) {
    -webkit-print-color-adjust: exact;
    print-color-adjust: exact;
  }
}
