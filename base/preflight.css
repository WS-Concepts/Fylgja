/**
 * Fylgja (https://fylgja.dev)
 * Licensed under MIT Open Source
 */
*,
::before,
::after {
  box-sizing: border-box;
  border: 0 solid currentcolor;
  background-repeat: no-repeat;
}

:where(:root) {
  --root-bg: hsl(0, 0%, 100%);
  --root-fg: hsl(0, 0%, 8%);
  --family-emoji: "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
  	"Noto Color Emoji";
  --family-sans: system-ui, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell,
  	Helvetica, Arial, "Helvetica Neue", sans-serif, var(--family-emoji);
  --family-mono: ui-monospace, SFMono-Regular, "SF Mono", Menlo, Consolas,
  	"Liberation Mono", monospace, var(--family-emoji);
  --chevron-light-scheme: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke="hsl(0 0% 0%)"><path d="m6 9 6 6 6-6"/></svg>');
  --chevron-dark-scheme: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke="hsl(0 0% 100%)"><path d="m6 9 6 6 6-6"/></svg>');
  --outline-transition: outline 150ms cubic-bezier(0.25, 0, 0.4, 1);
  color-scheme: light dark;
  block-size: 100%;
  font-family: var(--family-sans);
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
  scrollbar-gutter: stable;
  tab-size: 4;
  hanging-punctuation: first allow-end last;
}

:where(:focus-visible) {
  outline: 2px solid;
  outline-offset: 0;
  transition: var(--outline-transition);
}

:where(:not(:active):focus-visible) {
  outline-offset: 2px;
}

:target {
  scroll-margin-block: var(--anchor-offset, max(2rem, 5svb));
}

@media (prefers-reduced-motion: no-preference) {
  :where(:has(:target)) {
    scroll-behavior: smooth;
  }
}
:where(body) {
  min-block-size: 100%;
  margin: 0;
  background-color: var(--root-bg);
  color: var(--root-fg);
  font-size: var(--font-size, 1rem);
  line-height: var(--line-height, 1.6);
}

:where(:any-link,
button,
input,
label[for],
select,
summary,
textarea,
[tabindex]:not([tabindex^="-"])) {
  touch-action: manipulation;
}

:where(summary) {
  display: list-item;
}

:where(summary > *) {
  display: inline;
}

[hidden] {
  display: none;
}

:where(h1, h2, h3, h4, h5, h6, p, blockquote, dl, ul, ol, pre) {
  margin-block: var(--text-my, 1em 1rem);
}

:where(h1, h2, h3, h4, h5, h6) {
  font-size: 1.1rem;
  font-weight: 700;
  line-height: 1.25;
  text-wrap: balance;
}

:where(h1) {
  font-size: 3.5rem;
}

:where(h2) {
  font-size: 2.5rem;
}

:where(h3) {
  font-size: 2rem;
}

:where(h4) {
  font-size: 1.5rem;
}

:where(h5) {
  font-size: 1.25rem;
}

:where(p, li) {
  max-inline-size: 65ch;
  text-wrap: pretty;
}

:where(:any-link) {
  color: currentcolor;
  font-weight: 500;
}

:where(input, button, textarea, select) {
  font: inherit;
}

:where(ul[role=list], ol[role=list], nav ol, nav ul) {
  list-style: none;
  margin-block: 0;
  padding-inline-start: 0;
}

:where(dl, ol, ul) :where(dl, ol, ul) {
  margin-block: 0;
}

:where(dt) {
  font-weight: 500;
}

:where(dd + dt) {
  margin-block-start: 0.5em;
}

:where(dd) {
  margin-inline-start: 0;
}

:where(hr) {
  margin-block: var(--hr-my, 1.5em);
  border-block-end-width: 1px;
  color: inherit;
}

:where(mark) {
  padding-inline: 0.125em;
}

:where(small) {
  font-size: 0.8em;
}

:where(sub, sup) {
  position: relative;
  font-size: 0.75em;
  line-height: 0;
  vertical-align: baseline;
}

:where(sub) {
  bottom: -0.25em;
}

:where(sup) {
  top: -0.5em;
}

:where(code, kbd, samp, pre) {
  font-family: var(--family-mono);
}

:where(code, pre) {
  background-color: color-mix(in oklab, var(--root-bg) 90%, var(--root-fg));
  writing-mode: lr;
  direction: ltr;
}

:where(:not(pre) > code, kbd) {
  white-space: nowrap;
  padding-inline: 0.25em;
  border-radius: 0.5rem;
}

:where(pre) {
  white-space: pre;
  min-inline-size: 0;
  max-inline-size: max-content;
  padding-block: var(--pre-py, 0.875em);
  padding-inline: var(--pre-px, 1em);
  border-radius: 0.5em;
  overflow: auto;
}

:where(kbd) {
  border-width: 1px;
}

:where(img, svg, video, canvas, audio, iframe, embed, object) {
  display: block;
}

:where(img, svg, video) {
  max-inline-size: 100%;
  block-size: auto;
}

:where(iframe) {
  max-inline-size: 100%;
  block-size: auto;
  aspect-ratio: var(--aspect-ratio, 16/9);
}

::backdrop {
  background-color: var(--backdrop-color, hsla(0, 0%, 0%, 0.2));
  opacity: 0;
}
@media (prefers-reduced-motion: no-preference) {
  ::backdrop {
    transition: opacity var(--speed) ease-out, display var(--speed) ease-out allow-discrete, overlay var(--speed) ease-out;
  }
}

:where(dialog) {
  --ty: var(--dialog-translate-y, 2rem);
  --tx: var(--dialog-translate-x, 0);
  --speed: var(--dialog-close-speed, 200ms);
  position: fixed;
  max-block-size: calc(100% - 2em);
  max-inline-size: calc(100% - 2em);
  background-color: var(--dialog-bg, color-mix(in oklab, var(--root-bg) 96%, white));
  color: var(--dialog-color, var(--root-fg));
  border-radius: 1rem;
  padding: 1.5rem;
  box-shadow: var(--dialog-shadow, 0 3px 5px hsla(0, 0%, 0%, 0.18));
  opacity: 0;
  translate: var(--tx) var(--ty);
}
@media (prefers-reduced-motion: no-preference) {
  :where(dialog) {
    transition: translate var(--speed) ease-out, opacity var(--speed) ease-out, display var(--speed) ease-out allow-discrete, overlay var(--speed) ease-out;
  }
}

::backdrop {
  opacity: 1;
}
@starting-style {
  ::backdrop {
    opacity: 0;
  }
}

:where(dialog:is([open], :popover-open)) {
  --speed: var(--dialog-open-speed, 300ms);
  translate: 0 0;
  opacity: 1;
}
@starting-style {
  :where(dialog:is([open], :popover-open)) {
    translate: var(--tx) var(--ty);
    opacity: 0;
  }
}

:where(:root:has(dialog:is([open]:modal, :popover-open))) {
  overflow: hidden;
}

@media print {
  :is(h1, h2, h3, h4, h5, h6) {
    page-break-after: avoid;
  }
  :is(h2, h3, h4, h5, h6, p) {
    orphans: 3;
    widows: 3;
  }
  :is(tr, img, svg, pre, blockquote) {
    page-break-inside: avoid;
  }
  :is(abbr[title])::after {
    content: " (" attr(title) ")";
  }
  :is(a[href]:not([href^="#"], [href^="javascript:"]))::after {
    content: " (" attr(href) ")";
  }
  :is(thead) {
    display: table-header-group;
  }
}
