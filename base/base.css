/**
 * Fylgja (https://fylgja.dev)
 * Licensed under MIT Open Source
 */
*,
::before,
::after {
  box-sizing: border-box;
  border: 0 solid currentcolor;
  background-repeat: no-repeat;
}

:where(:root) {
  --root-bg: hsl(0, 0%, 100%);
  --root-fg: hsl(0, 0%, 8%);
  --family-emoji: "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
  	"Noto Color Emoji";
  --family-sans: system-ui, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell,
  	Helvetica, Arial, "Helvetica Neue", sans-serif, var(--family-emoji);
  --family-mono: ui-monospace, SFMono-Regular, "SF Mono", Menlo, Consolas,
  	"Liberation Mono", monospace, var(--family-emoji);
  --chevron-light-scheme: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke="hsl(0 0% 0%)"><path d="m6 9 6 6 6-6"/></svg>');
  --chevron-dark-scheme: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke="hsl(0 0% 100%)"><path d="m6 9 6 6 6-6"/></svg>');
  --outline-transition: outline 150ms cubic-bezier(0.25, 0, 0.4, 1);
  color-scheme: light dark;
  block-size: 100%;
  font-family: var(--family-sans);
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
  scrollbar-gutter: stable;
  tab-size: 4;
  hanging-punctuation: first allow-end last;
}

:where(:focus-visible) {
  outline: 2px solid;
  outline-offset: 0;
  transition: var(--outline-transition);
}

:where(:not(:active):focus-visible) {
  outline-offset: 2px;
}

:target {
  scroll-margin-block: var(--anchor-offset, max(2rem, 5svb));
}

@media (prefers-reduced-motion: no-preference) {
  :where(:has(:target)) {
    scroll-behavior: smooth;
  }
}
:where(body) {
  min-block-size: 100%;
  margin: 0;
  background-color: var(--root-bg);
  color: var(--root-fg);
  font-size: var(--font-size, 1rem);
  line-height: var(--line-height, 1.5);
}

:where(:any-link,
button,
input,
label[for],
select,
summary,
textarea,
[tabindex]:not([tabindex^="-"])) {
  touch-action: manipulation;
}

:where(summary) {
  display: list-item;
}

:where(summary > *) {
  display: inline;
}

[hidden] {
  display: none;
}

:where(h1, h2, h3, h4, h5, h6, p, blockquote, dl, ul, ol, pre) {
  margin-block: var(--text-my, 1em 1rem);
}

:where(h1, h2, h3, h4, h5, h6) {
  font-size: 1.1rem;
  font-weight: 700;
  line-height: 1.25;
  text-wrap: balance;
}

:where(h1) {
  font-size: 3.5rem;
}

:where(h2) {
  font-size: 2.5rem;
}

:where(h3) {
  font-size: 2rem;
}

:where(h4) {
  font-size: 1.5rem;
}

:where(h5) {
  font-size: 1.25rem;
}

:where(p, li) {
  max-inline-size: 65ch;
  text-wrap: pretty;
}

:where(:any-link) {
  color: currentcolor;
  font-weight: 500;
}

:where(input, button, textarea, select) {
  font: inherit;
}

:where(ul[role=list], ol[role=list], nav ol, nav ul) {
  list-style: none;
  margin-block: 0;
  padding-inline-start: 0;
}

:where(dl, ol, ul) :where(dl, ol, ul) {
  margin-block: 0;
}

:where(dt) {
  font-weight: 500;
}

:where(dd + dt) {
  margin-block-start: 0.5em;
}

:where(dd) {
  margin-inline-start: 0;
}

:where(hr) {
  margin-block: var(--hr-my, 1.5em);
  border-block-end-width: 1px;
  color: inherit;
}

:where(mark) {
  padding-inline: 0.125em;
}

:where(small) {
  font-size: 0.8em;
}

:where(sub, sup) {
  position: relative;
  font-size: 0.75em;
  line-height: 0;
  vertical-align: baseline;
}

:where(sub) {
  bottom: -0.25em;
}

:where(sup) {
  top: -0.5em;
}

:where(code, kbd, samp, pre) {
  font-family: var(--family-mono);
}

:where(code, pre) {
  background-color: color-mix(in oklab, var(--root-bg) 90%, var(--root-fg));
  writing-mode: lr;
  direction: ltr;
}

:where(:not(pre) > code, kbd) {
  white-space: nowrap;
  padding-inline: 0.25em;
  border-radius: 0.5rem;
}

:where(pre) {
  white-space: pre;
  min-inline-size: 0;
  max-inline-size: max-content;
  padding-block: var(--pre-py, 0.875em);
  padding-inline: var(--pre-px, 1em);
  border-radius: 0.5em;
  overflow: auto;
}

:where(kbd) {
  border-width: 1px;
}

:where(img, svg, video, canvas, audio, iframe, embed, object) {
  display: block;
}

:where(img, svg, video) {
  max-inline-size: 100%;
  block-size: auto;
}

:where(iframe) {
  max-inline-size: 100%;
  block-size: auto;
  aspect-ratio: var(--aspect-ratio, 16/9);
}

::backdrop {
  background-color: var(--backdrop-color, hsla(0, 0%, 0%, 0.2));
  opacity: 0;
}
@media (prefers-reduced-motion: no-preference) {
  ::backdrop {
    transition: opacity var(--speed) ease-out, display var(--speed) ease-out allow-discrete, overlay var(--speed) ease-out;
  }
}

:where(dialog) {
  --ty: var(--dialog-translate-y, 2rem);
  --tx: var(--dialog-translate-x, 0);
  --speed: var(--dialog-close-speed, 200ms);
  position: fixed;
  max-block-size: calc(100% - 2em);
  max-inline-size: calc(100% - 2em);
  background-color: var(--dialog-bg, color-mix(in oklab, var(--root-bg) 96%, white));
  color: var(--dialog-color, var(--root-fg));
  border-radius: 1rem;
  padding: 1.5rem;
  box-shadow: var(--dialog-shadow, 0 3px 5px hsla(0, 0%, 0%, 0.18));
  opacity: 0;
  translate: var(--tx) var(--ty);
}
@media (prefers-reduced-motion: no-preference) {
  :where(dialog) {
    transition: translate var(--speed) ease-out, opacity var(--speed) ease-out, display var(--speed) ease-out allow-discrete, overlay var(--speed) ease-out;
  }
}

::backdrop {
  opacity: 1;
}
@starting-style {
  ::backdrop {
    opacity: 0;
  }
}

:where(dialog:is([open], :popover-open)) {
  --speed: var(--dialog-open-speed, 300ms);
  translate: 0 0;
  opacity: 1;
}
@starting-style {
  :where(dialog:is([open], :popover-open)) {
    translate: var(--tx) var(--ty);
    opacity: 0;
  }
}

:where(:root:has(dialog:is([open]:modal, :popover-open))) {
  overflow: hidden;
}

:where(button,
input:is([type=button], [type=submit], [type=reset]),
.btn),
:where(input[type=file])::file-selector-button {
  appearance: button;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  gap: var(--btn-gap, 0.5em);
  padding-block: var(--btn-py, 0.375rem);
  padding-inline: var(--btn-px, 0.8rem);
  border: var(--btn-border-width, 2px) solid var(--btn-stroke, currentcolor);
  border-radius: var(--btn-radius, 0.35rem);
  background: var(--btn-bg, transparent);
  color: var(--btn-color, currentcolor);
  font-size: 1em;
  font-weight: var(--btn-font-weight, 500);
  line-height: inherit;
  text-align: center;
  text-decoration: none;
  transition: color 0.2s linear, background-color 0.2s linear, border-color 0.2s linear, box-shadow 0.2s linear, outline-offset 250ms linear;
  user-select: none;
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

:where(button,
input:is([type=button], [type=submit], [type=reset]),
.btn):disabled {
  box-shadow: none;
  border-color: var(--btn-disabled-stroke, currentcolor);
  background-color: var(--btn-disabled-bg, hsl(0, 0%, 90%));
  color: var(--btn-disabled-color, hsl(0, 0%, 40%));
  cursor: not-allowed;
}
:where(button,
input:is([type=button], [type=submit], [type=reset]),
.btn):not(:disabled):hover {
  border-color: var(--btn-hover-stroke, var(--btn-stroke, currentcolor));
  background-color: var(--btn-hover-bg, var(--btn-bg, color-mix(in oklab, currentcolor, transparent 86%)));
  color: var(--btn-hover-color, var(--btn-color, currentcolor));
}
:where(button,
input:is([type=button], [type=submit], [type=reset]),
.btn):not(:disabled):active {
  border-color: var(--btn-active-stroke, var(--btn-stroke, currentcolor));
  background-color: var(--btn-active-bg, var(--btn-bg, color-mix(in oklab, currentcolor, transparent 78%)));
  color: var(--btn-active-color, var(--btn-color, currentcolor));
}

:where(input[type=file]):disabled::file-selector-button {
  box-shadow: none;
  border-color: var(--btn-disabled-stroke, currentcolor);
  background-color: var(--btn-disabled-bg, hsl(0, 0%, 90%));
  color: var(--btn-disabled-color, hsl(0, 0%, 40%));
  cursor: not-allowed;
}
:where(input[type=file]):not(:disabled):hover::file-selector-button {
  border-color: var(--btn-hover-stroke, var(--btn-stroke, currentcolor));
  background-color: var(--btn-hover-bg, var(--btn-bg, color-mix(in oklab, currentcolor, transparent 86%)));
  color: var(--btn-hover-color, var(--btn-color, currentcolor));
}
:where(input[type=file]):not(:disabled):active::file-selector-button {
  border-color: var(--btn-active-stroke, var(--btn-stroke, currentcolor));
  background-color: var(--btn-active-bg, var(--btn-bg, color-mix(in oklab, currentcolor, transparent 78%)));
  color: var(--btn-active-color, var(--btn-color, currentcolor));
}

:where(input:not([type=button],
[type=reset],
[type=submit],
[type=image]),
textarea,
select) {
  appearance: none;
  inline-size: 100%;
  margin: 0;
  padding-block: var(--form-py, 0.375rem);
  padding-inline: var(--form-px, 0.8rem);
  border: var(--form-border-width, 1px) solid var(--form-stroke, currentcolor);
  border-radius: var(--form-radius, 0.35rem);
  background: var(--form-bg, var(--root-bg));
  color: var(--form-color, inherit);
  transition: color 250ms linear, background-color 250ms linear, border-color 250ms linear, box-shadow 250ms linear, var(--outline-transition);
}
:where(input:not([type=button],
[type=reset],
[type=submit],
[type=image]),
textarea,
select):is(:disabled, [readonly]) {
  box-shadow: none;
  opacity: var(--form-disabled-opacity, 0.6);
  cursor: not-allowed;
}

:where(input:not([type=range],
[type=checkbox],
[type=radio],
[type=button],
[type=reset],
[type=submit],
[type=image]),
textarea,
select):focus {
  border-color: var(--form-focus-color, var(--form-stroke, currentcolor));
  outline: 1px solid var(--form-focus-color, var(--form-stroke, currentcolor));
  outline-offset: 0;
}

:where(input[type=color]) {
  --form-py: 3px;
  --form-px: 3px;
  block-size: var(--block-size, 2.5em);
  inline-size: var(--inline-size, 2.5em);
}
:where(input[type=color])::-webkit-color-swatch-wrapper {
  padding: 0;
  border-radius: inherit;
}
:where(input[type=color])::-moz-color-swatch {
  border: 0;
  border-radius: inherit;
}
:where(input[type=color])::-webkit-color-swatch {
  border: 0;
  border-radius: inherit;
}

:where(input[type=file]) {
  --form-py: 0;
  --form-px: 0 0.8rem;
  --btn-radius: 0;
  --btn-border-width: var(--form-border-width, 1px);
  overflow: clip;
}
:where(input[type=file])::file-selector-button {
  margin-block: calc(var(--btn-border-width) / -1);
  margin-inline: calc(var(--btn-border-width) / -1) 1em;
}

:where(input[type=range]) {
  --fill-color: var(--form-focus-color, var(--root-fg));
  --fill-max: 100;
  --fill: 0;
  --size: var(--thumb-size, 3ex);
  block-size: var(--size);
  padding: 0;
  border: 0;
  background: transparent;
  outline: none;
  cursor: grab;
}
:where(input[type=range]):where(:dir(rtl)) {
  --fill-direction: left;
}
:where(input[type=range]):where(:active) {
  cursor: grabbing;
}
:where(input[type=range]):where(:not(:disabled):hover, :not(:disabled):active) {
  --thumb-scale: 1.125;
}
:where(input[type=range]):where(:not(:active):focus-visible) {
  --outline: var(--fill-color);
  --outline-offset: 0px;
}
:where(input[type=range])::-webkit-slider-runnable-track {
  block-size: var(--track-height, 0.5ex);
  border-radius: var(--form-radius, 0.35rem);
  background: linear-gradient(to var(--fill-direction, right), transparent calc(100% * var(--fill) / var(--fill-max)), var(--track-color, color-mix(in oklab, var(--root-fg) 30%, var(--root-bg))) 0%), var(--fill-color);
}
:where(input[type=range])::-moz-range-track {
  block-size: var(--track-height, 0.5ex);
  border-radius: var(--form-radius, 0.35rem);
  background: linear-gradient(to var(--fill-direction, right), transparent calc(100% * var(--fill) / var(--fill-max)), var(--track-color, color-mix(in oklab, var(--root-fg) 30%, var(--root-bg))) 0%), var(--fill-color);
}
:where(input[type=range])::-webkit-slider-thumb {
  appearance: none;
  block-size: var(--size);
  inline-size: var(--size);
  margin-block-start: var(--thumb-offset, calc(0.5 * (var(--track-height, 0.5ex) - var(--size))));
  border-radius: var(--thumb-radius, 50%);
  border: var(--thumb-border-width, 2px) solid var(--thumb-stroke, var(--root-bg));
  background: var(--thumb-bg, var(--fill-color));
  outline: 2px solid var(--outline);
  outline-offset: var(--outline-offset, -2px);
  scale: var(--thumb-scale, 1);
  transition: outline 150ms ease-out, scale 150ms ease-in-out;
}
:where(input[type=range])::-moz-range-thumb {
  appearance: none;
  block-size: var(--size);
  inline-size: var(--size);
  margin-block-start: var(--thumb-offset, calc(0.5 * (var(--track-height, 0.5ex) - var(--size))));
  border-radius: var(--thumb-radius, 50%);
  border: var(--thumb-border-width, 2px) solid var(--thumb-stroke, var(--root-bg));
  background: var(--thumb-bg, var(--fill-color));
  outline: 2px solid var(--outline);
  outline-offset: var(--outline-offset, -2px);
  scale: var(--thumb-scale, 1);
  transition: outline 150ms ease-out, scale 150ms ease-in-out;
  box-sizing: border-box;
}

:where(input[type=checkbox], input[type=radio]) {
  --form-border-width: 2px;
  --_gap: var(--icon-gap, 3px);
  block-size: 1.25em;
  inline-size: 1.25em;
  flex-shrink: 0;
  padding: var(--_gap);
  background-clip: content-box;
  user-select: none;
  -webkit-print-color-adjust: exact;
  print-color-adjust: exact;
}
:where(input[type=checkbox], input[type=radio]):not(:disabled) {
  cursor: pointer;
}
:where(input[type=checkbox], input[type=radio]):checked {
  border-color: var(--form-focus-color, var(--form-stroke, currentcolor));
  background-color: var(--form-focus-color, var(--form-stroke, currentcolor));
}

:where(input[type=radio]) {
  --form-radius: 50%;
}

:where(input[type=checkbox]:not([role=switch])) {
  --icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='3' stroke-linecap='round' stroke-linejoin='round'%3E %3Cpath d='M20 6 9 17l-5-5'/%3E %3C/svg%3E ");
  --icon-gap: 0px;
  --icon-bg: var(--form-bg, var(--root-bg));
  --icon-color: var(--form-focus-color, var(--form-stroke, currentcolor));
}
:where(input[type=checkbox]:not([role=switch])):indeterminate {
  --icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='3'%3E%3Cpath d='M5 12h14'/%3E%3C/svg%3E");
}
:where(input[type=checkbox]:not([role=switch])):checked {
  background-color: var(--icon-bg);
}
:where(input[type=checkbox]:not([role=switch])):checked::after {
  content: "";
  display: block;
  aspect-ratio: 1;
  border-radius: inherit;
  background-color: var(--icon-color);
  mask: var(--icon) var(--icon-position, center)/var(--icon-size, contain) no-repeat;
}

:where(input[type=checkbox][role=switch]) {
  --icon-gap: 1px;
  --form-radius: 1.25em;
  inline-size: 2.25em;
  background-clip: border-box;
}
:where(input[type=checkbox][role=switch])::after {
  content: "";
  display: block;
  block-size: calc(1em - var(--_gap) * 2);
  inline-size: calc(1em - var(--_gap) * 2);
  border-radius: inherit;
  background-color: var(--checked-color, currentcolor);
  transition: translate 0.15s ease;
}
:where(input[type=checkbox][role=switch]):checked::after {
  translate: 1em 0;
}
:where(input[type=checkbox][role=switch]):dir(rtl):checked::after {
  translate: -1em 0;
}

:where(select) {
  word-wrap: normal;
}

:where(select:not([multiple], [size]:not([size="1"]))) {
  --icon: var(--select-icon, var(--icon-chevron-light-scheme));
  --icon-size: var(--select-icon-size, 1.25em);
  --icon-offset: var(--select-icon-offset, 0.8rem);
  padding-inline-end: calc(var(--icon-size) + var(--icon-offset));
  background: var(--icon) var(--form-bg, var(--root-bg)) var(--icon-position, right) var(--icon-offset) center/var(--icon-size) no-repeat;
  -webkit-print-color-adjust: exact;
  print-color-adjust: exact;
}
:where(select:not([multiple], [size]:not([size="1"]))):where(:dir(rtl)) {
  --icon-position: left;
}

[list]:not([type*=date], [type=month], [type=week], [type=time])::-webkit-calendar-picker-indicator, [list]:not([type*=date], [type=month], [type=week], [type=time])::-webkit-list-button {
  all: unset !important;
}

:where(textarea) {
  resize: vertical;
  min-height: calc(1lh + var(--form-py, 0.375rem) * 2 + var(--form-border-width, 1px) * 2);
}

::placeholder {
  opacity: 1;
  color: color-mix(in srgb, currentcolor 54%, transparent);
}

:where(fieldset) {
  margin: 0;
  padding: 0;
}

:where(legend) {
  padding: 0;
}

::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-datetime-edit,
::-webkit-datetime-edit-fields-wrapper,
::-webkit-datetime-edit-year-field,
::-webkit-datetime-edit-month-field,
::-webkit-datetime-edit-day-field,
::-webkit-datetime-edit-hour-field,
::-webkit-datetime-edit-minute-field,
::-webkit-datetime-edit-second-field,
::-webkit-datetime-edit-millisecond-field,
::-webkit-datetime-edit-meridiem-field {
  display: inline;
  padding-block: 0;
}

::-webkit-date-and-time-value {
  min-height: 1lh;
  text-align: inherit;
}

input:is([type=tel], [type=url], [type=email], [type=number]) {
  direction: ltr;
}

@media print {
  :is(h1, h2, h3, h4, h5, h6) {
    page-break-after: avoid;
  }
  :is(h2, h3, h4, h5, h6, p) {
    orphans: 3;
    widows: 3;
  }
  :is(tr, img, svg, pre, blockquote) {
    page-break-inside: avoid;
  }
  :is(abbr[title])::after {
    content: " (" attr(title) ")";
  }
  :is(a[href]:not([href^="#"], [href^="javascript:"]))::after {
    content: " (" attr(href) ")";
  }
  :is(thead) {
    display: table-header-group;
  }
}
/**
 * Fylgja (https://fylgja.dev)
 * Licensed under MIT Open Source
 */
:root {
  --brand: hsl(265 100% 56%);
  --on-brand: hsl(265 0% 100%);
  scrollbar-color: var(--scrollthumb-color, var(--brand)) var(--scrolltrack-color, transparent);
  accent-color: var(--brand);
  caret-color: var(--brand);
}

@media (prefers-color-scheme: dark) {
  :root {
    --root-bg: color-mix(in oklab, black 82%, var(--brand));
    --root-fg: #fff;
    --select-icon: var(--chevron-dark-scheme);
  }
}
@media print {
  :root {
    --brand: hsl(0 0% 0%);
    --on-brand: hsl(0 0% 100%);
  }
}
::marker {
  color: var(--brand);
}

::selection {
  text-shadow: none;
  background: var(--brand);
  color: var(--on-brand);
}

:focus-visible {
  outline-color: var(--brand);
}

:where(input, textarea, select) {
  --form-focus-color: var(--brand);
  --checked-bg: var(--brand);
  --checked-color: var(--on-brand);
}

::-webkit-calendar-picker-indicator {
  outline-color: var(--brand);
}

:where(select option:checked) {
  background: var(--brand);
  color: var(--on-brand);
}

:where(.btn.-primary, [type=submit], form button:not([type])),
:where(input[type=file])::file-selector-button {
  --btn-stroke: transparent;
  --btn-bg: var(--brand);
  --btn-color: var(--on-brand);
  --btn-hover-bg: color-mix(in oklab, var(--brand) 80%, black);
  --btn-active-bg: color-mix(in oklab, var(--brand) 72%, black);
}

:where(.btn,
button,
input:is([type=button], [type=submit], [type=reset])):has(svg:only-child, img:only-child) {
  --btn-px: var(--btn-py, 0.375rem);
}
