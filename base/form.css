/**
 * Fylgja (https://fylgja.dev)
 * Licensed under MIT Open Source
 */
:where(input:not([type=checkbox],
[type=radio],
[type=button],
[type=reset],
[type=submit]),
textarea,
select) {
  appearance: none;
  inline-size: 100%;
  margin: 0;
  padding-block: var(--form-py, 0.375rem);
  padding-inline: var(--form-px, 0.8rem);
  border: var(--form-border-width, 1px) solid var(--form-stroke, currentcolor);
  border-radius: var(--form-radius, 0.35rem);
  background: var(--form-bg, var(--root-bg));
  color: var(--form-color, inherit);
  transition: color 250ms, background-color 250ms, border-color 250ms, box-shadow 250ms, var(--outline-transition);
}
:where(input:not([type=checkbox],
[type=radio],
[type=button],
[type=reset],
[type=submit]),
textarea,
select):is(:disabled, [readonly]) {
  box-shadow: none;
  border-style: var(--form-disabled-border-style, dashed);
  opacity: var(--form-disabled-opacity, 0.6);
  cursor: not-allowed;
}

:where(input:not([type=range],
[type=checkbox],
[type=radio],
[type=button],
[type=reset],
[type=submit]),
textarea,
select):focus {
  border-color: var(--form-active-color, var(--form-stroke, currentcolor));
  outline: 1px solid var(--form-active-color, var(--form-stroke, currentcolor));
  outline-offset: 0;
}

:where(input[type=color]) {
  --form-py: 3px;
  --form-px: 3px;
  block-size: var(--block-size, 2.5em);
  inline-size: var(--inline-size, 2.5em);
}
:where(input[type=color])::-webkit-color-swatch-wrapper {
  padding: 0;
  border-radius: inherit;
}
:where(input[type=color])::-moz-color-swatch {
  border: 0;
  border-radius: inherit;
}
:where(input[type=color])::-webkit-color-swatch {
  border: 0;
  border-radius: inherit;
}

:where(input[type=file]) {
  --form-py: 0;
  --form-px: 0 0.8rem;
  --btn-radius: 0;
  --btn-border-width: var(--form-border-width, 1px);
  overflow: clip;
}
:where(input[type=file])::file-selector-button {
  margin-block: calc(var(--btn-border-width) / -1);
  margin-inline: calc(var(--btn-border-width) / -1) 1em;
}

:where(input[type=range]) {
  --fill-color: var(--form-active-color, currentcolor);
  --fill-max: 100;
  --fill: 0;
  --size: var(--thumb-size, 3ex);
  block-size: var(--size);
  padding: 0;
  border: 0;
  background: transparent;
  outline: none;
  cursor: grab;
}
:where(input[type=range]):where(:dir(rtl)) {
  --fill-direction: left;
}
:where(input[type=range]):where(:active) {
  cursor: grabbing;
}
:where(input[type=range]):where(:not(:active):focus-visible) {
  --outline: var(--fill-color);
}
:where(input[type=range])::-webkit-slider-runnable-track {
  --_progression: calc(100% * var(--fill) / var(--fill-max));
  block-size: var(--track-height, 0.85ex);
  border-radius: var(--form-radius, 0.35rem);
  background: var(--track-color, color-mix(in srgb, currentcolor 24%, transparent)) linear-gradient(to var(--fill-direction, right), var(--fill-color) var(--_progression), transparent var(--_progression));
}
:where(input[type=range])::-moz-range-track {
  --_progression: calc(100% * var(--fill) / var(--fill-max));
  block-size: var(--track-height, 0.85ex);
  border-radius: var(--form-radius, 0.35rem);
  background: var(--track-color, color-mix(in srgb, currentcolor 24%, transparent)) linear-gradient(to var(--fill-direction, right), var(--fill-color) var(--_progression), transparent var(--_progression));
}
:where(input[type=range])::-webkit-slider-thumb {
  appearance: none;
  block-size: var(--size);
  inline-size: var(--size);
  box-shadow: var(--thumb-shadow);
  margin-block-start: var(--thumb-offset, calc(0.5 * (var(--track-height, 0.85ex) - var(--size))));
  border-radius: var(--thumb-radius, 50%);
  border: var(--thumb-border-width, 2px) solid var(--thumb-stroke, var(--root-bg));
  background: var(--thumb-bg, var(--fill-color));
  outline: 2px solid var(--outline);
  transition: outline 150ms, scale 150ms, box-shadow 150ms;
}
:where(input[type=range])::-moz-range-thumb {
  appearance: none;
  block-size: var(--size);
  inline-size: var(--size);
  box-shadow: var(--thumb-shadow);
  margin-block-start: var(--thumb-offset, calc(0.5 * (var(--track-height, 0.85ex) - var(--size))));
  border-radius: var(--thumb-radius, 50%);
  border: var(--thumb-border-width, 2px) solid var(--thumb-stroke, var(--root-bg));
  background: var(--thumb-bg, var(--fill-color));
  outline: 2px solid var(--outline);
  transition: outline 150ms, scale 150ms, box-shadow 150ms;
  box-sizing: border-box;
}

:where(select) {
  word-wrap: normal;
}

:where(select:not([multiple], [size]:not([size="1"]))) {
  --icon: var(--select-icon, var(--icon-chevron-light-scheme));
  --icon-size: var(--select-icon-size, 1.25em);
  --icon-offset: var(--select-icon-offset, 0.8rem);
  padding-inline-end: calc(var(--icon-size) + var(--icon-offset));
  background: var(--icon) var(--form-bg, var(--root-bg)) var(--icon-position, right) var(--icon-offset) center/var(--icon-size) no-repeat;
  -webkit-print-color-adjust: exact;
  print-color-adjust: exact;
}
:where(select:not([multiple], [size]:not([size="1"]))):where(:dir(rtl)) {
  --icon-position: left;
}

[list]:not([type*=date], [type=month], [type=week], [type=time])::-webkit-calendar-picker-indicator, [list]:not([type*=date], [type=month], [type=week], [type=time])::-webkit-list-button {
  all: unset !important;
}

:where(textarea) {
  resize: vertical;
  min-height: calc(1lh + var(--form-py, 0.375rem) * 2 + var(--form-border-width, 1px) * 2);
}

:where(label:has(input)) {
  display: block;
}

::placeholder {
  opacity: 1;
  color: color-mix(in srgb, currentcolor 54%, transparent);
}

:where(fieldset) {
  margin: 0;
  padding: 0;
}

:where(legend) {
  padding: 0;
}

::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-datetime-edit,
::-webkit-datetime-edit-fields-wrapper,
::-webkit-datetime-edit-year-field,
::-webkit-datetime-edit-month-field,
::-webkit-datetime-edit-day-field,
::-webkit-datetime-edit-hour-field,
::-webkit-datetime-edit-minute-field,
::-webkit-datetime-edit-second-field,
::-webkit-datetime-edit-millisecond-field,
::-webkit-datetime-edit-meridiem-field {
  display: inline;
  padding-block: 0;
}

::-webkit-date-and-time-value {
  min-height: 1lh;
  text-align: inherit;
}

input:is([type=tel], [type=url], [type=email], [type=number]) {
  direction: ltr;
}

:where(input[type=checkbox], input[type=radio]) {
  --_gap: var(--icon-gap, 3px);
  appearance: none;
  block-size: var(--size-y, 1.25em);
  inline-size: var(--size-x, 1.25em);
  border: var(--control-border-width, 2px) solid currentcolor;
  background: var(--control-bg, none);
  color: var(--control-color, currentcolor);
  border-radius: var(--control-radius, 0.35rem);
  margin: 0;
  padding: var(--_gap);
  user-select: none;
  -webkit-print-color-adjust: exact;
  print-color-adjust: exact;
}
:where(input[type=checkbox], input[type=radio]):not(:disabled) {
  cursor: pointer;
}
:where(input[type=checkbox], input[type=radio])::after {
  content: "";
  display: block;
  block-size: 100%;
  inline-size: 100%;
  border-radius: inherit;
  background-color: var(--icon-color, currentcolor);
  scale: var(--_show-icon, 0);
  opacity: var(--_show-icon, 0);
  transition: translate 0.15s, scale 0.15s, opacity 0.15s;
  forced-color-adjust: none;
}
:where(input[type=checkbox], input[type=radio]):checked {
  --_show-icon: 1;
  color: var(--form-active-color, var(--control-color, currentcolor));
}

:where(input[type=radio]) {
  --control-radius: 50%;
}

:where(input[type=checkbox]:not([role=switch])) {
  --_icon: var(--icon, url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='4'%3E%3Cpath d='M20 6 9 17l-5-5'/%3E %3C/svg%3E"));
  --icon-gap: 1px;
  --indeterminate-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='4'%3E%3Cpath d='M5 12h14'/%3E%3C/svg%3E");
}
:where(input[type=checkbox]:not([role=switch])):indeterminate {
  --_show-icon: 1;
  --_icon: var(--indeterminate-icon);
}
:where(input[type=checkbox]:not([role=switch]))::after {
  -webkit-mask: var(--_icon, url("#")) center/contain no-repeat;
  mask: var(--_icon, url("#")) center/contain no-repeat;
}

:where(input[type=checkbox][role=switch]) {
  --_show-icon: 1;
  --control-radius: 1.25em;
  --size-x: 2em;
  --icon-color: color-mix(in oklab, currentcolor 60%, transparent);
}
:where(input[type=checkbox][role=switch])::after {
  inline-size: auto;
  aspect-ratio: 1;
}
:where(input[type=checkbox][role=switch]):checked {
  --icon-color: currentcolor;
}
:where(input[type=checkbox][role=switch]):checked::after {
  translate: calc(var(--size-x) - var(--size-y, 1.25em)) 0%;
}
:where(input[type=checkbox][role=switch]):checked:dir(rtl)::after {
  translate: calc((var(--size-x) - var(--size-y, 1.25em)) / -1) 0%;
}

@keyframes progress-indeterminate {
  from {
    background-position: 200% 0;
  }
  to {
    background-position: -200% 0;
  }
}
progress {
  --_color: color-mix(in oklab, currentcolor 20%, var(--root-bg));
  --_value-color: var(--form-active-color, currentcolor);
  appearance: none;
  display: inline-block;
  width: 100%;
  height: 0.675rem;
  overflow: hidden;
  border-radius: 0.5em;
  background-color: currentcolor;
  color: var(--_color);
}
progress::-webkit-progress-bar {
  border-radius: inherit;
  background: none;
}
progress[value]::-webkit-progress-value {
  background-color: var(--_value-color);
}
progress::-moz-progress-bar {
  background-color: var(--_value-color);
}
progress:indeterminate {
  background: currentcolor linear-gradient(to right, var(--_value-color) 30%, currentcolor 30%) top left/150% 150% no-repeat;
}
@media (prefers-reduced-motion: no-preference) {
  progress:indeterminate {
    animation: progress-indeterminate 2s linear infinite;
  }
}
