.join {
  position: relative;
  display: inline-flex;
  max-width: max-content;
  border-radius: var(--rounded, 0.35rem);
  vertical-align: middle;
}
.join :focus-visible {
  translate: 0 0;
}
.join > * {
  margin: 0;
  border-radius: 0;
}
.join > :first-child {
  border-start-start-radius: inherit;
  border-end-start-radius: inherit;
}
.join > :last-child {
  border-start-end-radius: inherit;
  border-end-end-radius: inherit;
}

.join:where(.-custom-input, .-step, .form-input) {
  transition: color 250ms, background-color 250ms, border-color 250ms, box-shadow 250ms, var(--outline-transition);
}
.join:where(.-custom-input, .-step, .form-input):where(:has(:focus-visible)) {
  outline: var(--outline-size, 2px) solid var(--brand, currentcolor);
  outline-offset: var(--outline-offset, 2px);
}

.join:where(.-custom-input, .-step) label {
  position: relative;
}
.join:where(.-custom-input, .-step) input:is([type=checkbox], [type=radio]) {
  position: absolute;
  opacity: 0;
  block-size: auto;
  inline-size: auto;
}

.join:where(.-step) {
  color: var(--brand);
}
.join:where(.-step) label {
  --_is-checked: initial;
  opacity: var(--_is-checked, 0.6);
}
.join:where(.-step) label:has(:checked) ~ label {
  --_is-checked: /* */;
}

.join:where(.form-input) {
  --outline-size: 1px;
  --outline-offset: calc((var(--form-border-width, 1px) + 1px) * -1);
}
.join:where(.form-input) > * {
  padding: 0;
  border: 0;
}
