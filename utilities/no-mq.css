.hidden {
  display: none;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline-flex {
  display: inline-flex;
}

.sr-only,
.not-sr-only {
  position: var(--_use, absolute);
  block-size: var(--_use, 1px);
  inline-size: var(--_use, 1px);
  overflow: var(--_use, hidden);
  clip-path: var(--_use, inset(50%));
}

.not-sr-only {
  --_use: /* */ ;
}

.auto-grid {
  --grid-max-cols: 4;
  --grid-col-size: 14rem;
  --gap: 1em;
  display: grid;
  gap: var(--gap);
  grid-template-columns: repeat(auto-fill, minmax(clamp(100% / var(--grid-max-cols) - var(--gap), var(--grid-col-size), 100%), 1fr));
}

.stack {
  display: grid;
}
.stack > * {
  grid-area: 1/1;
}

.overlay {
  border-image: 0 fill linear-gradient(0deg, hsla(0, 0%, 0%, 0.6), transparent);
}

.snap {
  --snap-dir: x mandatory;
  --snap-stop: normal;
  --snap-align: start;
  scroll-snap-type: var(--snap-dir);
  scroll-snap-stop: var(--snap-stop);
  scroll-behavior: smooth;
}
.snap > * {
  scroll-snap-align: var(--snap-align);
}

.snap-cols {
  --snap-cols: 4;
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: calc((100% - var(--snap-gap, 1em)) / var(--snap-cols));
  gap: var(--snap-gap, 1em);
  padding-block-end: var(--scroll-gutter, 1rem);
}

:is(.scroll, .scroll-mask-x, .scroll-mask-y) {
  --scroll-x: auto;
  --scroll-y: auto;
  overflow: var(--scroll-x) var(--scroll-y);
  overscroll-behavior: contain;
}

@property --scroll-mask-start-opacity {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --scroll-mask-end-opacity {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 0%;
}
@keyframes scroll-mask {
  0% {
    --mask-start-opacity: 100%;
    --mask-end-opacity: 0%;
  }
  1%, 99% {
    --mask-start-opacity: 0%;
    --mask-end-opacity: 0%;
  }
  100% {
    --mask-start-opacity: 0%;
    --mask-end-opacity: 100%;
  }
}
:is(.scroll-mask-x, .scroll-mask-y) {
  --mask-dir: to right;
  --mask-size: 2rem;
  --mask: linear-gradient(
  	var(--mask-dir),
  	hsl(0 0% 0% / var(--mask-start-opacity, 0%)),
  	hsl(0 0% 0% / 100%) var(--mask-size),
  	hsl(0 0% 0% / 100%) calc(100% - var(--mask-size)),
  	hsl(0 0% 0% / var(--mask-end-opacity, 0%))
  );
  -webkit-mask-image: var(--mask);
  mask-image: var(--mask);
  animation: scroll-mask linear;
}

.scroll-mask-x {
  animation-timeline: scroll(self inline);
}

.scroll-mask-y {
  --mask-dir: to bottom;
  animation-timeline: scroll(self block);
}

:where(.unset-flow > *, .flow > :first-child) {
  margin-block: 0;
}

:where(.flow > * + *) {
  margin-block: var(--flow, 1em) 0;
}

.line-clamp {
  --line-count: 3;
  display: -webkit-box;
  overflow: hidden;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: var(--line-count);
}

.truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.scrollbar-none {
  scrollbar-width: none;
}
.scrollbar-none::-webkit-scrollbar {
  display: none;
}

.scrollbar-thin {
  scrollbar-width: thin;
}
.scrollbar-thin::-webkit-scrollbar {
  width: 0.4rem;
  height: 0.4rem;
}

.stretched-link::after {
  content: "";
  position: absolute;
  inset: 0;
}

.flexbox {
  --flex-dir: row;
  --flex-wrap: nowrap;
  --flex: 0 1 auto;
  display: flex;
  flex-flow: var(--flex-dir) var(--flex-wrap);
}
.flexbox > * {
  flex: var(--flex);
}

.gap-var {
  --gap: 1em;
  gap: var(--gap);
}

.m-var {
  --my: 0;
  --mx: auto;
  margin-block: var(--my);
  margin-inline: var(--mx);
}

.p-var {
  --py: 1em;
  --px: 1em;
  padding-block: var(--py);
  padding-inline: var(--px);
}

.align {
  --align: normal space-between;
  --align-items: center legacy;
  --align-self: auto;
  place-content: var(--align);
  place-items: var(--align-items);
}
.align > * {
  place-self: var(--align-self);
}
